<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="using:Avalonia.Controls.Converters"
                    x:ClassModifier="internal">

    <converters:MarginMultiplierConverter x:Key="NotificationCardIconMarginMultiplier"
                                          Bottom="True"
                                          Indent="1"
                                          Left="True"
                                          Top="True" />

    <Design.PreviewWith>
        <Border Padding="0" Background="White">
            <NotificationCard Content="Testing" />
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type NotificationCard}" TargetType="NotificationCard">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="Width" Value="340" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
        <Setter Property="RenderTransformOrigin" Value="50%,75%" />
        <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
        <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ThemeBorderCornerRadius}" />
        <Setter Property="Template">
            <ControlTemplate>
                <LayoutTransformControl Name="PART_LayoutTransformControl" UseRenderTransform="True">
                    <Border Margin="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BoxShadow="0 0 8 0 #64000000"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border ClipToBounds="True">
                            <Border.CornerRadius>
                                <MultiBinding Converter="{x:Static SynthoraConverters.BorderCornerRadiusConverter}" ConverterParameter="TopLeft,TopRight">
                                    <Binding Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </Border.CornerRadius>
                            <DockPanel>
                                <Panel x:Name="PART_HeaderBar"
                                       Height="4"
                                       Background="{TemplateBinding BorderBrush}"
                                       DockPanel.Dock="Top" />
                                <DockPanel>
                                    <TipIcon Name="icon"
                                             Margin="{TemplateBinding Padding,
                                                                      Converter={StaticResource NotificationCardIconMarginMultiplier}}"
                                             VerticalAlignment="Top" />
                                    <ContentPresenter Name="PART_ContentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding Content}" />
                                </DockPanel>
                            </DockPanel>
                        </Border>
                    </Border>
                </LayoutTransformControl>
            </ControlTemplate>
        </Setter>

        <ControlTheme.Animations>
            <Animation Easing="QuadraticEaseOut"
                       FillMode="Forward"
                       Duration="0:0:0.4">
                <KeyFrame Cue="0%">
                    <Setter Property="ScaleTransform.ScaleY" Value="0" />
                    <Setter Property="TranslateTransform.X" Value="800" />
                </KeyFrame>
                <!--  中间可选插值点，这里省略，直接到最终状态  -->
                <KeyFrame Cue="100%">
                    <Setter Property="TranslateTransform.X" Value="0" />
                    <Setter Property="ScaleTransform.ScaleY" Value="1" />
                </KeyFrame>
            </Animation>
        </ControlTheme.Animations>

        <Style Selector="^[IsClosing=true] /template/ LayoutTransformControl#PART_LayoutTransformControl">
            <Setter Property="RenderTransformOrigin" Value="50%,0%" />
            <Style.Animations>
                <Animation Easing="QuadraticEaseOut"
                           FillMode="Forward"
                           Duration="0:0:0.75">
                    <KeyFrame Cue="0%">
                        <Setter Property="TranslateTransform.X" Value="0" />
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="70%">
                        <Setter Property="TranslateTransform.X" Value="800" />
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleY" Value="0" />
                        <Setter Property="TranslateTransform.X" Value="800" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="^[IsClosing=true]">
            <Style.Animations>
                <Animation Easing="QuadraticEaseOut"
                           FillMode="Forward"
                           Duration="0:0:1.25">
                    <KeyFrame Cue="100%">
                        <Setter Property="IsClosed" Value="True" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="^:information">
            <Style Selector="^ /template/ TipIcon#icon">
                <Setter Property="IconType" Value="Information" />
            </Style>
            <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardInformationBackgroundBrush}" />
        </Style>
        <Style Selector="^:success">
            <Style Selector="^ /template/ TipIcon#icon">
                <Setter Property="IconType" Value="Success" />
            </Style>
            <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardSuccessBackgroundBrush}" />
        </Style>
        <Style Selector="^:warning">
            <Style Selector="^ /template/ TipIcon#icon">
                <Setter Property="IconType" Value="Warning" />
            </Style>
            <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardWarningBackgroundBrush}" />
        </Style>
        <Style Selector="^:error">
            <Style Selector="^ /template/ TipIcon#icon">
                <Setter Property="IconType" Value="Error" />
            </Style>
            <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardErrorBackgroundBrush}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>