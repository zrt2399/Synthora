<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="using:Avalonia.Controls.Converters"
                    x:ClassModifier="internal"
                    x:CompileBindings="True">

    <Design.PreviewWith>
        <Border Padding="20">
            <SplitButton>SplitButton</SplitButton>
        </Border>
    </Design.PreviewWith>

    <converters:MarginMultiplierConverter x:Key="PrimaryButtonBorderMultiplier"
                                          Bottom="True"
                                          Indent="1"
                                          Left="True"
                                          Top="True" />
    <converters:MarginMultiplierConverter x:Key="SecondaryButtonBorderMultiplier"
                                          Bottom="True"
                                          Indent="1"
                                          Left="True"
                                          Right="True"
                                          Top="True" />

    <ControlTheme x:Key="SimpleSplitButtonComponent" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />

                    </Border>
                    <Border Name="checkedBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsVisible="False" />
                </Panel>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pressed">
            <Setter Property="Background" Value="{DynamicResource SynthoraHighBrush}" />
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
        </Style>

        <Style Selector="^[Tag=flyout-open]">
            <Setter Property="Background" Value="{DynamicResource SynthoraHighBrush}" />
        </Style>

        <Style Selector="^[Tag=checked]">
            <Setter Property="Background" Value="{DynamicResource SynthoraHighBrush}" />
            <Style Selector="^ /template/ Border#checkedBorder">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <Style Selector="^[Tag=checked-flyout-open]">
            <Setter Property="Background" Value="{DynamicResource SynthoraHighBrush}" />
            <Style Selector="^ /template/ Border#checkedBorder">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">
        <Setter Property="Background" Value="{DynamicResource SynthoraLowBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SynthoraBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />

        <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ThemeBorderCornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="{DynamicResource ThemeBorderPadding}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid ColumnDefinitions="*,Auto">
                    <Button x:Name="PART_PrimaryButton"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness,
                                                              Converter={StaticResource PrimaryButtonBorderMultiplier}}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            KeyboardNavigation.IsTabStop="False"
                            Theme="{StaticResource SimpleSplitButtonComponent}">
                        <Button.CornerRadius>
                            <MultiBinding Converter="{x:Static SynthoraConverters.BorderCornerRadiusConverter}" ConverterParameter="TopLeft,BottomLeft">
                                <Binding Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Button.CornerRadius>
                    </Button>

                    <Button x:Name="PART_SecondaryButton"
                            Grid.Column="1"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness,
                                                              Converter={StaticResource SecondaryButtonBorderMultiplier}}"
                            Focusable="False"
                            Foreground="{TemplateBinding Foreground}"
                            KeyboardNavigation.IsTabStop="False"
                            Theme="{StaticResource SimpleSplitButtonComponent}">
                        <Button.CornerRadius>
                            <MultiBinding Converter="{x:Static SynthoraConverters.BorderCornerRadiusConverter}" ConverterParameter="TopRight,BottomRight">
                                <Binding Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Button.CornerRadius>
                        <PathIcon Name="pathIcon"
                                  Width="12"
                                  Height="12"
                                  Data="{DynamicResource ArrowDownGlyph}"
                                  Foreground="{Binding $parent[Button].Foreground}" />
                    </Button>
                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:focus,^:pointerover">
            <Setter Property="Background" Value="{DynamicResource SynthoraMidBrush}" />
        </Style>

        <Style Selector="^:flyout-open">
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Tag" Value="flyout-open" />
            </Style>

            <Style Selector="^ /template/ PathIcon#pathIcon">
                <Setter Property="RenderTransform">
                    <RotateTransform Angle="180" />
                </Setter>
            </Style>
        </Style>

        <Style Selector="^:checked /template/ Button#PART_SecondaryButton">
            <Setter Property="Tag" Value="checked" />
        </Style>

        <Style Selector="^:checked:flyout-open">
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Tag" Value="checked-flyout-open" />
            </Style>

            <Style Selector="^ /template/ PathIcon#pathIcon">
                <Setter Property="RenderTransform">
                    <RotateTransform Angle="180" />
                </Setter>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>